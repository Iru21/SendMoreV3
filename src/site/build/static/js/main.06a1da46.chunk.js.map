{"version":3,"sources":["assets/favicon.png","utils/toast.tsx","utils/fileListToBase64.ts","utils/getFileExtensions.ts","api/validate.ts","api/send.ts","App.tsx","index.tsx"],"names":["generateToast","type","message","color","containerStyle","textDecoration","backgroundColor","border","cursor","margin","padding","innerStyle","borderRadius","borderColor","borderStyle","borderWidth","marginRight","marginBottom","fontSize","display","whiteSpace","toaster","notify","onClose","style","onClick","position","fileListToBase64","list","maxSize","bases","skips","i","reader","FileReader","current","item","size","toast","name","push","readAsDataURL","addEventListener","result","toString","replace","length","getFileExtensions","exts","includes","path","extname","validate","key","a","data","axios","post","process","headers","timeout","send","hashes","localStorage","getItem","console","log","App","useState","selectedFiles","setSelectedFiles","fileCount","setFileCount","apiKeyInputValue","setApiKeyInputValue","handleSend","event","apiKey","sha256","setItem","className","src","Logo","id","alt","undefined","htmlFor","accept","multiple","onChange","localFiles","target","files","localFileCount","value","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06a1da46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/favicon.5bd7feb9.png\";","import toaster from \"toasted-notes\"\r\nimport \"toasted-notes/src/styles.css\"\r\n\r\nexport default function generateToast(type: \"SUCCESS\" | \"ERROR\", message: string) {\r\n\r\n    let color: string = \"\"\r\n    switch (type) {\r\n        case \"SUCCESS\":\r\n            color = 'lightgreen'\r\n            break\r\n        case \"ERROR\":\r\n            color = 'crimson'\r\n            break\r\n    }\r\n\r\n    const containerStyle: any = {\r\n        textDecoration: \"none\",\r\n        backgroundColor: \"transparent\",\r\n        border: \"none\",\r\n        cursor: \"pointer\",\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n\r\n    const innerStyle: any = {\r\n        color: 'white',\r\n        backgroundColor: '#4e535e',\r\n        borderRadius: '30px',\r\n        borderColor: color,\r\n        borderStyle: 'solid',\r\n        borderWidth: '1px',\r\n        padding: '17px',\r\n        marginRight: '35px',\r\n        marginBottom: '25px',\r\n        fontSize: '20px',\r\n        display: \"inline-block\",\r\n        whiteSpace: \"nowrap\"\r\n    }\r\n\r\n    toaster.notify(({ onClose }) => (\r\n        <button style={containerStyle} onClick={onClose}>\r\n            <div style={innerStyle}>{message}</div>\r\n        </button>\r\n    ), {position: \"bottom-right\"});\r\n    return\r\n}","import toast from './toast'\r\n\r\nexport default function fileListToBase64(list: FileList, maxSize: number): [string[], number[]] {\r\n    const bases: string[] = []\r\n    const skips: number[] = []\r\n\r\n    for(let i = 0; i < list.length; i++) {\r\n        const reader = new FileReader()\r\n        const current = list.item(i) as Blob\r\n        if(current.size > maxSize * 1000000) {\r\n            toast(\"ERROR\", `File ${list.item(i)?.name} exceeds the ${maxSize}mb size limit!`)\r\n            skips.push(i)\r\n        } else {\r\n            reader.readAsDataURL(current)\r\n            reader.addEventListener(\"load\", () => {\r\n                const result = reader.result?.toString().replace(/^data:image\\/(png|jpg|gif|jpeg);base64,/, \"\")\r\n                if(result) bases.push(result)\r\n            })\r\n        }\r\n    }\r\n\r\n    return [bases, skips]\r\n}","import path from 'path'\r\nexport default function getFileExtensions(list: FileList, skips: number[]): string[] {\r\n    const exts: string[] = []\r\n    for(let i = 0; i < list.length; i++) {\r\n        if(!skips.includes(i)) {\r\n            const name = list.item(i)?.name\r\n            exts.push(path.extname(name!).replace(\".\", \"\"))\r\n        }\r\n    }\r\n    return exts\r\n}","import axios from 'axios'\r\nexport async function validate(key: string | null): Promise<boolean> {\r\n    if(key == null) return false\r\n    let data = {data: false}\r\n    try {\r\n        data = await axios.post(`http://${process.env.REACT_APP_API_P}:19713/validate`,\r\n            {},\r\n            {\r\n                headers: {\r\n                    'Authorization': 'key ' + key,\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                timeout: 1000\r\n            }\r\n        )\r\n    } catch {\r\n        data = await axios.post(`http://${process.env.REACT_APP_API_L}:19713/validate`,\r\n            {},\r\n            {\r\n                headers: {\r\n                    'Authorization': 'key ' + key,\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                timeout: 1000\r\n            }\r\n        )\r\n    }\r\n\r\n    return data.data as boolean\r\n}","import axios from 'axios'\r\nexport default async function send(hashes: string[], exts: string[]) {\r\n    try {\r\n        await axios.post(`http://${process.env.REACT_APP_API_P}:19713/send`, {hashes, exts},\r\n        {\r\n            headers: {\r\n                'Authorization': 'key ' + localStorage.getItem('DS-api-key-wwx'),\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            timeout: 1000\r\n        })\r\n    } catch {\r\n        await axios.post(`http://${process.env.REACT_APP_API_L}:19713/send`, {hashes, exts},\r\n        {\r\n            headers: {\r\n                'Authorization': 'key ' + localStorage.getItem('DS-api-key-wwx'),\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            timeout: 1000\r\n        })\r\n    }\r\n    return\r\n}","import React, {useState} from 'react'\nimport './css/App.css'\nimport Logo from './assets/favicon.png'\n\nimport toast from './utils/toast'\nimport fileListToBase64 from './utils/fileListToBase64'\nimport getFileExtensions from './utils/getFileExtensions'\nimport { validate } from './api/validate'\n\nimport {sha256} from 'js-sha256'\nimport send from './api/send'\n\nconsole.log(process.env)\n\nfunction App() {\n\n    const [selectedFiles, setSelectedFiles] = useState()\n    const [fileCount, setFileCount] = useState(0)\n    const [apiKeyInputValue, setApiKeyInputValue] = useState(\"\");\n\n    const selectFileHandler = (event: any) => {\n        const localFiles = event.target.files\n        const localFileCount = event.target.files.length\n        if(localFileCount > 30) {\n            event.target.value = ''\n            setSelectedFiles(undefined)\n            setFileCount(0)\n            toast(\"ERROR\", `File count bigger than 30! Clearing input...`)\n        } else {\n            setSelectedFiles(localFiles)\n            setFileCount(localFileCount)\n            toast(\"SUCCESS\", `Successfull selection! ${localFileCount} file${localFileCount !== 1 ? \"s\" : \"\"} selected.`)\n        }\n\t}\n\n    const clearApiKeyInput = (event: any) => {\n        if(apiKeyInputValue !== '') {\n            setApiKeyInputValue(\"\")\n            toast(\"SUCCESS\", `Cleared input!`)\n        }\n    }\n\n    const clearFileInput = (event: any) => {\n        if(fileCount > 0) {\n            setSelectedFiles(undefined)\n            setFileCount(0)\n            toast(\"SUCCESS\", `Cleared selection!`)\n        }\n    }\n\n    const apiKeyHandler = (event: any) => {\n        setApiKeyInputValue(event.target.value)\n    }\n\n    const resetApiKey = (event: any) => {\n        localStorage.clear()\n        toast(\"SUCCESS\", `API KEY has been cleared!`)\n    }\n\n    const handleSend = async (event: any) => {\n        if(!selectedFiles) return toast(\"ERROR\", \"No files selected!\")\n        const list: FileList = selectedFiles\n        if(list.length > 30) return toast(\"ERROR\", `File limit exceeded! (Max 30)`)\n\n        const [bases, skips] = fileListToBase64(list, 8)\n        const exts = getFileExtensions(list, skips)\n\n        const apiKey = localStorage.getItem('DS-api-key-wwx')\n\n        const isValid = await validate(apiKey)\n        if(!isValid) {\n            toast(\"ERROR\", \"No valid API key found in storage! Checking input...\")\n            const isValidFromInput = await validate(sha256(apiKeyInputValue))\n            if(!isValidFromInput) return toast(\"ERROR\", \"Invalid API key provided!\")\n            localStorage.setItem('DS-api-key-wwx', sha256(apiKeyInputValue))\n            toast(\"SUCCESS\", \"Sent!\")\n            return send(bases, exts)\n        }\n        toast(\"SUCCESS\", \"Sent!\")\n        return send(bases, exts)\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={Logo} id=\"hl\" alt=\"Logo\"/><p>Send More</p>\n            </header>\n            <div className=\"content\">\n                <div className=\"pickerWrapper\">\n                    <button type=\"button\" className=\"clearFileInput\" onClick={clearFileInput}>x</button>\n                    <label className=\"pickerButton\" htmlFor=\"upload\">Upload</label>\n                    <input id=\"upload\" className=\"picker\" type=\"file\" name=\"file\" accept=\"image/png, image/jpg, image/jpeg, image/gif\" multiple={true} onChange={selectFileHandler} />\n                    <p id=\"fc\">{fileCount} file{fileCount !== 1 ? \"s\" : \"\"} selected</p>\n                </div>\n                <div className=\"apiKeyWrapper\">\n                    <form>\n                        <p>API KEY</p>\n                        <div>\n                            <input type=\"password\" value={apiKeyInputValue} className=\"apiKeyInput\" name=\"apikey\" onChange={apiKeyHandler} />\n                            <button type=\"button\" className=\"clearApiKeyInput\" onClick={clearApiKeyInput}>x</button>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"sendWrapper\">\n                    <form>\n                        <div>\n                            <button type=\"button\" className=\"sendButton\" onClick={handleSend}>Send</button>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"resetApiKeyWrapper\">\n                    <form>\n                        <div>\n                            <button type=\"button\" className=\"resetApiKeyButton\" onClick={resetApiKey}>Reset API KEY</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}